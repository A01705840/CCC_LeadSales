<%- include('includes/head.ejs', {username: username}) %>
<h2>Hola</h2>

<div class="p-4 sm:ml-20 sm:mr-10 font-sans">
    <h1>Analítica</h1><br>
    <div class="flex flex-col justify-right p-4 border-2 border-gray-200 rounded-lg dark:border-gray-300 bg-slate-200">
        <div class="inline-flex justify-between items-center">
        </div>

        <div class="flex justify-center sm:mt-4 p-1 border-1 border-gray-200 rounded-lg dark:border-gray-200 bg-white">
                        <!-- Parte izquierda-->

            <div class="max-w-sm w-full bg-white rounded-lg shadow dark:bg-gray-300 p-4 md:p-6">
                <div>
                    <h5 class="leading-none text-3xl font-bold text-gray-800 dark:text-white pb-2">Leads</h5>
                    <p class="text-base font-normal text-gray-500 dark:text-gray-400">Esta Semana</p>
                </div>
                <div
                    class="flex items-center px-2.5 py-0.5 text-base font-semibold text-green-500 dark:text-green-500 text-center">
                    12%
                    <svg class="w-3 h-3 ms-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13V1m0 0L1 5m4-4 4 4"/>
                    </svg>
                </div>
                <div id="area-chart"></div>
                <div class="grid grid-cols-1 items-center border-gray-200 border-t dark:border-gray-200 justify-between">
                <div class="flex justify-between items-center pt-5">
                    <!-- Chart Izquierda -->
                    <button
                    id="dropdownDefaultButton"
                    data-dropdown-toggle="lastDaysdropdown"
                    data-dropdown-placement="bottom"
                    class="text-sm font-medium text-gray-500 dark:text-gray-400 hover:text-gray-600 text-center inline-flex items-center dark:hover:text-white"
                    type="button">
                    Last 7 days
                    <svg class="w-2.5 m-2.5 ms-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
                    </svg>
                    </button>
                    <!-- Dropdown menu -->
                    <div id="lastDaysdropdown" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
                        <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownDefaultButton">
                        <li>
                            <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Yesterday</a>
                        </li>
                        <li>
                            <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Today</a>
                        </li>
                        <li>
                            <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Last 7 days</a>
                        </li>
                        <li>
                            <a href="#" class="block px-4 py-2 hover:bg-gray-400 dark:hover:bg-gray-600 dark:hover:text-white">Last 30 days</a>
                        </li>
                        <li>
                            <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Last 90 days</a>
                        </li>
                        </ul>
                    </div>
                    <a
                    href="#"
                    class="uppercase text-sm font-semibold inline-flex items-center rounded-lg text-blue-600 hover:text-blue-700 dark:hover:text-blue-500  hover:bg-gray-100 dark:hover:bg-gray-700 dark:focus:ring-gray-700 dark:border-gray-700 px-3 py-2">
                    Users Report
                    <svg class="w-2.5 h-2.5 ms-1.5 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                    </svg>
                    </a>
                </div>
                </div>
            </div>       
             
                                    <!-- Parte izquierda-->
            <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js" defer></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" defer></script>

            <style>
            @import url(https://cdnjs.cloudflare.com/ajax/libs/MaterialDesign-Webfont/5.3.45/css/materialdesignicons.min.css);
            @import url(https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.css);
            </style>

                <div class="bg-white-800 text-black-500 rounded shadow-xl py-5 px-5 w-full" x-data="{chartData:chartData()}" x-init="chartData.fetch()">
                    <div class="flex flex-wrap items-end">
                        <div class="flex-1">
                            <h3 class="text-lg font-semibold leading-tight"></h3>
                        </div>
                        <div class="relative" @click.away="chartData.showDropdown=false">
                            <button class="text-xs hover:text-black-300 h-6 focus:outline-none" @click="chartData.showDropdown=!chartData.showDropdown">
                                <span x-text="chartData.options[chartData.selectedOption].label"></span><i class="ml-1 mdi mdi-chevron-down"></i>
                            </button>
                            <div class="bg-gray-200 shadow-lg rounded text-sm absolute top-auto right-0 min-w-full w-32 z-30 mt-1 -mr-3" x-show="chartData.showDropdown" style="display: none;" x-transition:enter="transition ease duration-300 transform" x-transition:enter-start="opacity-0 translate-y-2" x-transition:enter-end="opacity-100 translate-y-0" x-transition:leave="transition ease duration-300 transform" x-transition:leave-start="opacity-100 translate-y-0" x-transition:leave-end="opacity-0 translate-y-4">
                                <span class="absolute top-0 right-0 w-3 h-3 bg-gray-400 transform rotate-45 -mt-1 mr-3"></span>
                                <div class="bg-gray-200 rounded w-full relative z-10 py-1">
                                    <ul class="list-reset text-xs">
                                        <template x-for="(item,index) in chartData.options">
                                            <li class="px-4 py-2 hover:bg-gray-600 hover:text-gray-400 transition-colors duration-100 cursor-pointer" :class="{'text-black':index==chartData.selectedOption}" @click="chartData.selectOption(index);chartData.showDropdown=false">
                                                <span x-text="item.label"></span>
                                            </li>
                                        </template>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="flex flex-wrap items-end mb-5">
                        <h5>Cantidad Leads</h5>
                        <span class="inline-block" :class="chartData.data&&chartData.data[chartData.date].upDown<0?'text-red-500':'text-green-500'"><span x-text="chartData.data&&chartData.data[chartData.date].upDown<0?'▼':'▲'">0</span> <span x-text="chartData.data?chartData.data[chartData.date].upDown:0">0</span>%</span>
                    </div>
                    <div>
                        <canvas id="chart" class="w-full"></canvas>
                    </div>
            </div>
<script>
    
Number.prototype.comma_formatter = function() {
    return this.toString().replace(/\B(?<!\.\d*)(?=(\d{3})+(?!\d))/g, ",");
}

// Boton seleccionar, objeto
let chartData = function(){
    return {
        date: 'today',

        options: [
            {
                label: 'Today',
                value: 1,
            },
            {
                label: 'Last 7 Days',
                value: 7,
            },
            {
                label: 'Last 30 Days',
                value: 30,
            },
            {
                label: 'Last 6 Months',
                value: 182,
            },
            {
                label: 'This Year',
                value: 365,
            },
        ],
        showDropdown: false,
        selectedOption: 0,
        selectOption: function(index){
            this.selectedOption = index;
            this.date = this.options[index].value;
            console.log(index, 'Este es el index');
            this.renderChart();
        },
        data: null,
        fetch: function(){
            // Meter la ruta a este fetch, en la cual debe de coincidir 
            // fetch('https://cdn.jsdelivr.net/gh/swindon/fake-api@master/tailwindAlpineJsChartJsEx1.json')
            //     .then(res => res.json())
            //     .then(res => {
            //         this.data = res.dates;
            //         this.renderChart();
            //     })
            fetch('/lead/analitica', {method: 'post', body: {
                "nDayss": 30
            }}) // Peticiones asincronas del cliente al server
                .then(res => res.json())
                .then(res => {
                    this.data = res.dataChart;
                    this.renderChart();
                })
        },
        renderChart: function(){
            let c = false;

            Chart.helpers.each(Chart.instances, function(instance) {
                if (instance.chart.canvas.id == 'chart') {
                    c = instance;
                }
            });

            if(c) {
                c.destroy();
            }

            let ctx = document.getElementById('chart').getContext('2d');

            let chart = new Chart(ctx, {
                type: "line",
                data: {
                    labels: this.data[this.date].data.labels,
                    datasets: [
                        {
                            label: "Leads",
                            backgroundColor: "rgba(102, 126, 234, 0.25)",
                            borderColor: "rgba(102, 126, 234, 1)",
                            pointBackgroundColor: "rgba(102, 126, 234, 1)",
                            data: this.data[this.date].data.income,
                        },
                    ],
                },
                layout: {
                    padding: {
                        right: 10
                    }
                },
                options: {
                    scales: {
                        yAxes: [{
                            gridLines: {
                                display: false
                            },
                            ticks: {
                                callback: function(value,index,array) {
                                    return value > 1000 ? ((value < 1000000) ? value/1000 + 'K' : value/1000000 + 'M') : value;
                                }
                            }
                        }]
                    }
                }
            });
        }
    }
}


</script>
                    </tr>

                </tbody>
            </table>
            
        </div>        
</div>  